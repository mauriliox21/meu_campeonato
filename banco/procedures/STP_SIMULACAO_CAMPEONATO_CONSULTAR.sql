IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.STP_SIMULACAO_CAMPEONATO_CONSULTAR'))
   DROP PROCEDURE STP_SIMULACAO_CAMPEONATO_CONSULTAR

GO
CREATE PROCEDURE STP_SIMULACAO_CAMPEONATO_CONSULTAR(
    @SQ_CAMPEONATO INT
)
AS
BEGIN 
	SET DATEFORMAT DMY

	DECLARE @INSTRUCAO NVARCHAR(MAX)

	DECLARE @SQ_TIME_CAMPEAO INT

	SET @SQ_TIME_CAMPEAO = ISNULL((SELECT TOP 1 CAT.SQ_TIME 
                                   FROM TB_CAMPEONATO_TIME CAT WITH(NOLOCK)
                                   WHERE CAT.SQ_CAMPEONATO = @SQ_CAMPEONATO
                                   AND CAT.NR_COLOCACAO = 1), 0)

	-- A disputa do terceiro lugar é uma partida da fase final que não inclui o time campeão
	SET @INSTRUCAO = ' SELECT IIF(FAS.NM_FASE = ''Final'' AND TIM1.SQ_TIME <> '+ CAST(@SQ_TIME_CAMPEAO AS VARCHAR(10)) +' AND TIM2.SQ_TIME <> '+ CAST(@SQ_TIME_CAMPEAO AS VARCHAR(10)) +', ''Disputa do 3° lugar'', FAS.NM_FASE) AS NM_FASE, 
	                   TIM1.NM_TIME AS NM_TIME_1, TIM2.NM_TIME AS NM_TIME_2, JOG.*, ''sucesso'' AS CT_TIPO_RETORNO
                       FROM TB_JOGO JOG WITH(NOLOCK)
                       INNER JOIN TB_FASE FAS WITH(NOLOCK) ON JOG.SQ_FASE = FAS.SQ_FASE
                       INNER JOIN TB_TIME TIM1 WITH(NOLOCK) ON JOG.SQ_TIME_1 = TIM1.SQ_TIME
                       INNER JOIN TB_TIME TIM2 WITH(NOLOCK) ON JOG.SQ_TIME_2 = TIM2.SQ_TIME 
					   WHERE FAS.SQ_CAMPEONATO = ' + CAST(@SQ_CAMPEONATO AS VARCHAR(10))


	EXECUTE sp_executesql @INSTRUCAO
	
END
GO